*monokai-nightasty.nvim.txt*    For Neovim >= 0.9   Last change: 2025 April 03

==============================================================================
Table of Contents                   *monokai-nightasty.nvim-table-of-contents*

1. Description                            |monokai-nightasty.nvim-description|
2. Features                                  |monokai-nightasty.nvim-features|
  - Supported plugins               |monokai-nightasty.nvim-supported-plugins|
3. Requirements                          |monokai-nightasty.nvim-requirements|
4. Installation                          |monokai-nightasty.nvim-installation|
5. Usage/Configuration            |monokai-nightasty.nvim-usage/configuration|
  - Configuration details       |monokai-nightasty.nvim-configuration-details|
  - Configuration examples     |monokai-nightasty.nvim-configuration-examples|
  - Customization: Change a color/style:|monokai-nightasty.nvim-customization:-change-a-color/style:|
6. Colors and Highlights        |monokai-nightasty.nvim-colors-and-highlights|
7. Extras                                      |monokai-nightasty.nvim-extras|
  - Markdown files                     |monokai-nightasty.nvim-markdown-files|
  - Tmux                                         |monokai-nightasty.nvim-tmux|
8. Using with other plugins  |monokai-nightasty.nvim-using-with-other-plugins|
9. Color Palettes                      |monokai-nightasty.nvim-color-palettes|
  - Dark Style                             |monokai-nightasty.nvim-dark-style|
  - Light Style                           |monokai-nightasty.nvim-light-style|
10. Contributions                       |monokai-nightasty.nvim-contributions|

==============================================================================
1. Description                            *monokai-nightasty.nvim-description*

A dark/light theme for Neovim based on the Monokai color palette. This theme is
born from a mix between the code of the great tokyonight.nvim
<https://github.com/folke/tokyonight.nvim> and the palette of the flavorful
vim-monokai-tasty <https://github.com/patstockwell/vim-monokai-tasty>.


==============================================================================
2. Features                                  *monokai-nightasty.nvim-features*

- Infused with the Monokai palette for a vibrant, distraction-free coding
    experience.
- Avoid eye strain by seamlessly toggling between clear and dark styles at your
    fingertips, whether youâ€™re at your station or out in the wild.
- Highly customizable for your coding needs.
- Support for popular plugins like treesitter, cmp, telescope, gitsigns,
    lualine, indent-blankline, which-key, notify, noice, todo-comments and more.


SUPPORTED PLUGINS                   *monokai-nightasty.nvim-supported-plugins*

Click to expand ~

  -----------------------------------------------------------------------
  Plugin                     Highlights Module
  -------------------------- --------------------------------------------
  aerial.nvim                aerial

  ale                        ale

  alpha-nvim                 alpha

  barbar.nvim                barbar

  blink.cmp                  blink

  bufferline.nvim            bufferline

  dashboard-nvim             dashboard

  flash.nvim                 flash

  fzf-lua                    fzf

  gitsigns.nvim              gitsigns

  headlines.nvim             headlines

  indent-blankline.nvim      indent-blankline

  justinmk/dirvish.vim       dirvish

  lazy.nvim                  lazy

  leap.nvim                  leap

  lspsaga.nvim               lspsaga

  mini.diff                  mini_diff

  mini.hipatterns            mini_hipatterns

  mini.icons                 mini_icons

  mini.indentscope           mini_indentscope

  mini.statusline            mini_statusline

  neo-tree.nvim              neo-tree

  neogit                     neogit

  neotest                    neotest

  noice.nvim                 noice

  nvim-cmp                   cmp

  nvim-dap-ui                dapui

  nvim-navic                 navic

  nvim-notify                notify

  nvim-scrollbar             scrollbar

  nvim-tree.lua              nvim-tree

  nvim-treesitter-context    treesitter-context

  rainbow-delimiters.nvim    rainbow

  render-markdown.nvim       render-markdown

  snacks.nvim                snacks

  telescope.nvim             telescope

  todo-comments.nvim         todo-comments

  trouble.nvim               trouble

  undotree                   undotree

  vim-gitgutter              gitgutter

  vim-sneak                  sneak

  vimwiki                    vimwiki

  which-key.nvim             which-key

  yanky.nvim                 yanky
  -----------------------------------------------------------------------

==============================================================================
3. Requirements                          *monokai-nightasty.nvim-requirements*

- Neovim <https://neovim.io/> >= 0.9.0
- nvim-treesitter <https://github.com/nvim-treesitter/nvim-treesitter> > 0.9.2


==============================================================================
4. Installation                          *monokai-nightasty.nvim-installation*

Install with your package manager.

>lua
    -- Lazy
    {
      "polirritmico/monokai-nightasty.nvim",
      lazy = false,
      priority = 1000,
    }
<


==============================================================================
5. Usage/Configuration            *monokai-nightasty.nvim-usage/configuration*


BASIC USAGE ~

>lua
    vim.opt.background = "dark" -- default to dark or light style
    
    local opts = {...} -- options should be setted through a setup call:
    require("monokai-nightasty").setup(opts) -- ...and then load the theme:
    require("monokai-nightasty").load()
    
    -- As an alternative, pass the options directly into load and it will run setup
    -- the first time it is executed:
    require("monokai-nightasty").load(opts)
<

>vim
    :set background=dark
    :colorscheme monokai-nightasty
<


  [!TIP] **TLDR:** Check the |monokai-nightasty.nvim-configuration-examples|.
------------------------------------------------------------------------------

TOGGLE FUNCTION ~

The plugin provides a toggle function to change the dark/light styles:

>lua
    require("monokai-nightasty").toggle()
<

>vim
    :MonokaiToggleLight
<


CONFIGURATION DETAILS           *monokai-nightasty.nvim-configuration-details*


  Set the configuration **BEFORE** loading the theme

SPEC: ~

>lua
    ---@class monokai.Config
    ---@field dark_style_background monokai.BackgroundConfig default, dark, transparent, #RRGGBB
    ---@field light_style_background monokai.BackgroundConfig default, dark, transparent, #RRGGBB
    ---@field on_colors fun(colors: ColorScheme)
    ---@field on_highlights fun(highlights: monokai.Highlights, colors: ColorScheme)
    ---@field hl_styles monokai.HighlightStylesConfig Styles to be applied to selected syntax groups
    ---@field color_headers boolean Enable header colors for each header level (h1, h2, etc.)
    ---@field dim_inactive boolean dims inactive windows
    ---@field lualine_bold boolean Lualine headers will be bold or regular
    ---@field lualine_style monokai.LualineStyleConfig Possible values: "dark", "light" or "default" (default follows dark/light style)
    ---@field markdown_header_marks boolean Add headers marks highlights (the `#` character) to Treesitter highlight query
    ---@field terminal_colors boolean|table|fun(colors: ColorScheme):table
    ---@field auto_enable_plugins boolean Automatically enable supported plugins through lazy.nvim
    ---@field plugins table<string, boolean> List of manually enabled/disabled plugins.
    ---@field cache boolean Enables/Disable the cache
<

------------------------------------------------------------------------------

FULL DEFAULTS: ~

Monokai Nightasty comes with these defaults:

>lua
    M.defaults = {
      dark_style_background = "default", -- default, dark, transparent, #RRGGBB
      light_style_background = "default", -- default, dark, transparent, #RRGGBB
      hl_styles = {
        -- Custom styles for this groups: (See `:help nvim_set_hl`, Parameters, {val} for supported keys)
        comments = { italic = true },
        keywords = { italic = false },
        functions = {},
        variables = {},
        -- Background styles for floating windows and sidebars (panels):
        floats = "default", -- default, dark, transparent
        sidebars = "default", -- default, dark, transparent
      },
    
      color_headers = false, -- Enable header colors for each header level (h1, h2, etc.)
      dim_inactive = false, -- dims inactive windows
      lualine_bold = true, -- Lualine headers will be bold or regular
      lualine_style = "default", -- "dark", "light" or "default" (default follows dark/light style)
      markdown_header_marks = false, -- Add headers marks highlights (the `#` character) to Treesitter highlight query
    
      -- Set the colors for terminal-mode (`:h terminal-config`). `false` to disable it.
      -- Pass a table with `terminal_color_x` values: `{ terminal_color_8 = "#e6e6e6" }`.
      -- Also accepts a function:
      -- ```lua
      -- function(colors) return { fg = colors.fg_dark, terminal_color_4 = "#ff00ff" } end
      -- ```
      -- > Use the `fg` key to apply colors to the normal text.
      terminal_colors = true,
    
      --- You can override specific color groups to use other groups or a hex color
      --- function will be called with the Monokai ColorScheme table.
      ---@param colors ColorScheme
      on_colors = function(colors) end,
    
      --- You can override specific highlights to use other groups or a hex color
      --- function will be called with the Monokai Highlights and ColorScheme table.
      ---@param highlights monokai.Highlights
      ---@param colors ColorScheme
      on_highlights = function(highlights, colors) end,
    
      -- When `true` the theme will be cached for better performance.
      cache = true,
    
      --- Automatically enable highlights for supported plugins in the lazy.nvim config.
      auto_enable_plugins = true,
    
      --- List of manually enabled/disabled plugins.
      --- Check the supported plugins here:
      ---   https://github.com/polirritmico/monokai-nightasty.nvim/tree/main/lua/monokai-nightasty/highlights
      ---@type table<string, boolean>
      plugins = {
        -- Use the ["<repository name>"]. For example:
        -- ["telescope.nvim"] = true,
    
        -- `all`: enable or disable all plugins. By default if lazy.nvim is not loaded enable all the plugins
        all = package.loaded.lazy == nil,
      },
    }
<


CONFIGURATION EXAMPLES         *monokai-nightasty.nvim-configuration-examples*


BASE CONFIGURATION WITH A BIT OF CUSTOMIZATION: ~

>lua
    {
      "polirritmico/monokai-nightasty.nvim",
      lazy = false,
      priority = 1000,
      keys = {
        { "<leader>tt", "<Cmd>MonokaiToggleLight<CR>", desc = "Monokai-Nightasty: Toggle dark/light theme." },
      },
      ---@module "monokai-nightasty"
      ---@type monokai.UserConfig
      opts = {
        dark_style_background = "default", -- default | dark | transparent | #RRGGBB
        light_style_background = "default", -- default | dark | transparent | #RRGGBB
        markdown_header_marks = true,
        -- hl_styles = { comments = { italic = false } },
        terminal_colors = function(colors) return { fg = colors.fg_dark } end,
      },
      config = function(_, opts)
        vim.opt.cursorline = true -- Highlight line at the cursor position
        vim.o.background = "dark" -- Default to dark theme
    
        require("monokai-nightasty").load(opts)
      end,
    }
<


FULL CONFIGURATION: ~

>lua
    return {
      "polirritmico/monokai-nightasty.nvim",
      lazy = false,
      priority = 1000,
      keys = {
        { "<leader>tt", "<Cmd>MonokaiToggleLight<CR>", desc = "Monokai-Nightasty: Toggle dark/light theme." },
      },
      ---@module "monokai-nightasty"
      ---@type monokai.UserConfig
      opts = {
        dark_style_background = "transparent", -- default, dark, transparent, #RRGGBB
        light_style_background = "default", -- default, dark, transparent, #RRGGBB
        color_headers = true, -- Enable header colors for each header level (h1, h2, etc.)
        lualine_bold = true, -- Lualine a and z sections font width
        lualine_style = "default", -- "dark", "light" or "default" (Follows dark/light style)
        markdown_header_marks = true, -- Add headers marks highlights (the `#` character) to Treesitter highlight query
        -- Style to be applied to selected syntax groups. See `:help nvim_set_hl`
        hl_styles = {
          keywords = { italic = true },
          comments = { italic = true },
          floats = "dark",
        },
    
        -- This also could be a table like this: `terminal_colors = { Normal = { fg = "#e6e6e6" } }`
        terminal_colors = function(colors)
          return { fg = colors.fg_dark }
        end,
    
        --- You can override specific color/highlights. Theme color values
        --- in `extras/palettes`. Also could be any hex RGB color you like.
        on_colors = function(colors)
          if vim.o.background == "light" then
            -- Custom colors for light theme
            colors.comment = "#2d7e79"
            colors.lualine.normal_bg = "#7ebd00"
          else
            -- Custom colors for dark theme
            colors.border = colors.magenta
            colors.lualine.normal_bg = colors.green
          end
        end,
    
        on_highlights = function(highlights, colors)
          -- You could add styles like bold, underline, italic
          highlights.TelescopeSelection = { bold = true }
          highlights.TelescopeBorder = { fg = colors.grey }
          highlights["@lsp.type.property.lua"] = { fg = colors.fg }
        end,
      },
      config = function(_, opts)
        -- Highlight line at the cursor position
        vim.opt.cursorline = true
    
        -- Default to dark theme
        vim.o.background = "dark"  -- dark | light
    
        -- Open new Nvim instances with the light theme when the sun hits the screen
        local date_output = vim.api.nvim_exec2("!date +'\\%H\\%M'", { output = true })
        local system_time = tonumber(string.match(date_output["output"], "%d%d%d%d"))
        if system_time >= 1345 and system_time < 1630 then
          vim.o.background = "light"
        end
    
        require("monokai-nightasty").load(opts)
      end,
    }
<

------------------------------------------------------------------------------

CUSTOMIZATION: CHANGE A COLOR/STYLE:*monokai-nightasty.nvim-customization:-change-a-color/style:*

There are two main options: change the color definition or the specific
highlight.


CHANGE A COLOR DEFINITION: ~

Simple use the `on_colors` option:

>lua
    opts = {
      on_colors = function(colors)
        colors.charcoal_medium = "#455455"
      end
    }
<

This would be applied before the highlights generation, so any highlight group
that uses the color is going to use the new color.


CHANGE A SPECIFIC HIGHLIGHT: ~

Simple use the `on_highlights` option:

>lua
    opts = {
      on_highlights(hl, c)
        hl["Folded"] = { fg = c.orange, bg = c.bg_float, italic = false },
        hl["LineNr"] = { fg = c.grey },
      end,
    }
<


  To get the highlight name, move the cursor over it and run `:Inspect` or check
  the |monokai-nightasty.nvim-plugin-modules|.

INDEPENDENT LIGHT/DARK THEME CUSTOMIZATION: ~

>lua
    {
      on_colors = function(colors)
        local is_light = vim.o.background == "light"
        colors.comment = is_light and "#2d7e79" or colors.grey
        colors.border = not is_light and colors.magenta or colors.border
    
        if is_light then
          colors.orange = "#f59263",
        end
      end,
    
      on_highlights = function(highlights, colors)
        local is_light = vim.o.background == "light"
    
        highlights["@variable.member.lua"] = {
          fg = is_light and colors.magenta or colors.grey,
          underline = is_light,
        },
      end,
    }
<

------------------------------------------------------------------------------

==============================================================================
6. Colors and Highlights        *monokai-nightasty.nvim-colors-and-highlights*

How the plugin setup the highlights and colors under the hood:

1. `colors` are loaded from the base palette based on the current
`vim.o.background` value ("`dark`"/"`light`").


2. Then, `colors` is extended and adjusted following the configuration settings.


3. After that, `opts.on_colors(colors)` is called, overriding any matching color.


4. The highlight groups are set using the generated `colors`.


5. `opts.on_highlights(highlights, colors)` can be used to override highlight
groups.



If `opts.cache` is `true` and the current configuration has no changes, jump
straight to step 5 to apply the `on_highlights` function.


  To get the name of a highlight group or to find the used color, here are some
  alternatives:
  1. Use `:Inspect` to get info of the highlight group at the current position.
  2. Check the generated palettes in the |monokai-nightasty.nvim-extras|.
  3. For plugins specifics check each |monokai-nightasty.nvim-module| in the
  `highlights` directory.
------------------------------------------------------------------------------

==============================================================================
7. Extras                                      *monokai-nightasty.nvim-extras*

Currently this extra files are generated:

- Monokai Nightasty Palettes <https://github.com/polirritmico/monokai-nightasty.nvim/tree/main/extras/palettes>
    (palettes <extras/palettes>)
- Kitty <https://sw.kovidgoyal.net/kitty/> (kitty <extras/kitty>)
- Konsole <https://invent.kde.org/utilities/konsole>
    (konsole <extras/konsole>)
- Lazygit <https://github.com/jesseduffield/lazygit>
    (lazygit <extras/lazygit>)
- Tmux <https://github.com/tmux/tmux/wiki> (tmux <extras/tmux>)
- Zathura <https://pwmt.org/projects/zathura/> (zathura <extras/zathura>)

The Monokai Nightasty Palette is a file with the used `colors` and
`highlights`.

To use the generated config files with the corresponding external tool, check
the `extras` folder, copy, link or reference the file in each setting. Refer to
the respective program documentation.


MARKDOWN FILES                         *monokai-nightasty.nvim-markdown-files*

Nvim Tressiter no longer provide highlight captures for the headers `#` marks.
This plugin will provide them for as long as they work, or until
nvim-treesitter provides any way to highlight them.

To enable this feature, set the `markdown_header_marks` option to `true`
(defaults to `false`).


TMUX                                             *monokai-nightasty.nvim-tmux*

Just source the theme file:

>bash
    source-file 'path/to/monokai-nightasty_dark.tmux'
    # or the rounded style:
    source-file 'path/to/monokai-nightasty_dark-rounded.tmux'
<


FIX UNDERCURLS IN TMUX ~

If the undercurls or colors are not being properly displayed within Tmux
<https://github.com/tmux/tmux>, add the following to your config file:

>sh
    # Undercurl
    set -as terminal-features ",xterm-256color:RGB" # or: set -g default-terminal "${TERM}"
    set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
    set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
<


==============================================================================
8. Using with other plugins  *monokai-nightasty.nvim-using-with-other-plugins*

You could import the color palette to use with other plugins:

>lua
    local opts = require("monokai-nightasty.config").extend()
    local colors = require("monokai-nightasty.colors").setup(opts)
    
    some_plugin_config.title = colors.blue
    example_plugin_config = {
      foo = colors.bg_dark,
      bar = colors.green,
      buz = opts.transparent and colors.none or colors.bg
    }
<

Some color utility functions are available for use:

>lua
    local opts = require("monokai-nightasty.config").extend()
    local colors = require("monokai-nightasty.colors").setup(opts)
    local utils = require("monokai-nightasty.utils")
    
    some_plugin_config.example = utils.lighten(colors.bg, 0.5)
    some_plugin_config.another = utils.darken(colors.bg, 0.3)
<


==============================================================================
9. Color Palettes                      *monokai-nightasty.nvim-color-palettes*


DARK STYLE                                 *monokai-nightasty.nvim-dark-style*

  Color name   Hex code
  ------------ ----------
  Yellow       #ffff87
  Purple       #af87ff
  Green        #a4e400
  Blue         #62d8f1
  Magenta      #fc1a70
  Orange       #ff9700

LIGHT STYLE                               *monokai-nightasty.nvim-light-style*

  Color name   Hex code
  ------------ ----------
  Yellow       #ff8f00
  Purple       #6054d0
  Green        #4fb000
  Blue         #00b3e3
  Magenta      #ff004b
  Orange       #ff4d00

==============================================================================
10. Contributions                       *monokai-nightasty.nvim-contributions*

This plugin is made mainly for my personal use, but suggestions, issues, or
pull requests are very welcome.

**Enjoy**

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
